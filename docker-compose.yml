version: '3.8'

services:
  php:
    build:
      context: ./auth-api
    container_name: auth-api-php
    ports:
      - "8000:80"
    volumes:
      - ./auth-api:/var/www/html
    depends_on:
      - db
    networks:
      - auth-net
    environment:
      - COMPOSER_ALLOW_SUPERUSER=1
    command: bash -c "composer install && apache2-foreground"

  node:
    build:
      context: ./receive-send-api
    container_name: receive-send-api-node
    ports:
      - "3000:3000"
      - "9229:9229"
    volumes:
      - ./receive-send-api:/usr/src/app
    networks:
      - auth-net
    environment:
      - PORT=3000
      - AUTH_API_URL=http://auth-api-php:80
      - RECORD_API_URL=http://record-api:8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: npx nodemon --inspect=0.0.0.0:9229 src/server.js

  record-api:
    build:
      context: ./record-api
    container_name: record-api
    ports:
      - "8001:8000"
      - "5678:5678" 
    volumes:
      - ./record-api:/app
    networks:
      - auth-net
    environment:
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=chat_app
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis
    command: >
      python -m debugpy --wait-for-client --listen 0.0.0.0:5678 -m uvicorn 
      src.main:app --host 0.0.0.0 --port 8000 --reload

  db:
    image: mysql:5.7
    container_name: auth-api-db
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: chat_app
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - auth-net

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - auth-net

networks:
  auth-net:
    driver: bridge

volumes:
  db_data:
